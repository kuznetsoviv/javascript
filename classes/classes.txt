Базовый синтаксис для создания классов:
	class MyClass {
   		constructor() { ... }
  		method1() { ... }
  		method2() { ... }
  		method3() { ... }
	}
	new MyClass() - синтаксис для создания нового класса
	Определение класса:
		Класс - это разновидность функции, конструкция class User{ ... }:
			1) создает функцию с именем User, код функции берется из метода constructor;
			2) сохраняет все методы в User.prototype.
			3) также можно добавлять геттеры и сеттеры
		Особенности классов:
			1) функция конструктора отмечена внутренним свойством: [[FunctionKind]]: 'classConstructor';
			2) нельзя вызвать без new;
			3) строковое представление функции в классе начинается с class User;
			4) методы класса являются неперечислимыми;
			5) классы всегда используют use strict;	
	Наследование:
		определяется с помощью слова extends

		class Animal {
			constructor(name) {
				this.name = name;
			}
		}		

		class Rabbit extends Animal {
			constructor(name) {
				super(name);
				this.created = Date.now();
			}
		}

		let rabbit = new Rabbit('Белый кролик');
		alert(rabbit.name);

		Общие положения при наследовании:
		1) class Child extends Parent, при этом Child.prototype.__proto__ = Parent.prototype
		2) обязателен вызов конструктора родителя super() в конструкторе Child до обращения к this
		3) super.method() - обращение к родительскому методу
		4) методы запоминают свой объект во внктреннем свойстве [[HomeObject]], super работает 
		благодаря этой особенности
		Статические методы класса принадлежат классу в целом, а не относятся к конкретному объекту класса,
		наследуются в потомках
