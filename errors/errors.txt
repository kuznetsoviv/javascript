-----------------------------------------------------------------------
-----------------------------------------------------------------------
Синтаксис try...catch:
	try {
		// код ...
	} catch (err) {
  		// обработка ошибки
	}
Пример:
	try {
  		alert('Начало блока try'); 
  		lalala; // ошибка, переменная не определена!
  		alert('Конец блока try (никогда не выполнится)');
	} catch(err) {
  		alert(`Возникла ошибка!`); 
	}

	let json = '{ "age": 30 }'; 
	try {

	  let user = JSON.parse(json); 

	  if (!user.name) {
	    throw new SyntaxError("Данные неполны: нет имени"); 
	  }

	  alert( user.name );

	} catch(e) {
	  alert( "JSON Error: " + e.message );
	}

Работает синхронно, иключение пойманное, например, в функции setTimeout не поймает.

Для глобального отлова ошибок надо использовать следующую функцию:
	window.onerror = function(message, url, line, col, error) {
  		// ...
	};
-----------------------------------------------------------------------
-----------------------------------------------------------------------
Пользовательские ошибки:
	class ValidationError extends Error {
		constructor(message) {
	  	super(message);
	    this.name = 'VlidationError';
	  }
	}
	Плюс такого подхода - возможность проверять ошибки с помощью оператора instanceof
	-----------------------------------------------------------------------
	Часто используется подход оборачивания ошибок в какую-то пользователскую ошибку:
		class ReadError extends Error {
		  constructor(message, cause) {
		    super(message);
		    this.cause = cause;
		    this.name = 'ReadError';
		  }
		}